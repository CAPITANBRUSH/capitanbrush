---
import AuthBtn from "@components/ui/buttons/AuthBtn.astro";

// Define los posibles idiomas
type Locale = "es" | "en" | "fr";

// Obtén el idioma actual, usando 'es' por defecto
const lang: Locale = (Astro.currentLocale as Locale) || "es";

// Define el tipo de traducciones para cada idioma
type Translations = {
  [key in Locale]: {
    title: string;
    subTitle: string;
    formTitle: string;
    formSubTitle: string;
    placeholderName: string;
    placeholderLastName: string;
    placeholderEmail: string;
    placeholderPhone: string;
    emailErrorText: string;
    phoneErrorText: string;
    terms: string;
    privacy: string;
    newsletter: string;
    submitButton: string;
    successTitle: string;
    successMessage: string;
    goToPayment: string;
    closeButton: string;
  };
};

// Define las traducciones
const translations: Translations = {
  es: {
    title: "Estás a un paso de cambiar tu vida",
    subTitle:
      "Navega por el mundo mientras llenas tu cartera, visitas sitios únicos. ¡Embárcate y empieza una nueva vida!",
    formTitle: "Completa el formulario",
    formSubTitle: "Nos pondremos en contacto contigo en 1 día hábil.",
    placeholderName: "Nombre",
    placeholderLastName: "Apellidos",
    placeholderEmail: "Email",
    placeholderPhone: "Número de teléfono",
    emailErrorText: "Por favor, ingresa un email válido.",
    phoneErrorText:
      "Por favor, ingresa un número de teléfono válido con al menos 10 dígitos.",
    terms: "términos",
    privacy: "política de privacidad",
    newsletter: "Suscribirse a la newsletter",
    submitButton: "Me apunto",
    successTitle: "¡Éxito!",
    successMessage:
      "¡Tu formulario ha sido enviado correctamente! Nos pondremos en contacto contigo pronto.",
    goToPayment:
      "Para finalizar tu inscripción vamos a enviarte a la pasarela de pago",
    closeButton: "Cerrar",
  },
  en: {
    title: "You’re One Step Away from Changing Your Life",
    subTitle:
      "Travel the world while filling your wallet, visiting unique places. Embark and start a new life!",
    formTitle: "Complete the Form",
    formSubTitle: "We will contact you within 1 business day.",
    placeholderName: "First Name",
    placeholderLastName: "Last Name",
    placeholderEmail: "Email",
    placeholderPhone: "Phone Number",
    emailErrorText: "Please enter a valid email address.",
    phoneErrorText:
      "Please enter a valid phone number with at least 10 digits.",
    terms: "terms",
    privacy: "privacy policy",
    newsletter: "Subscribe to the newsletter",
    submitButton: "Sign Up",
    successTitle: "Success!",
    successMessage:
      "Your form has been submitted successfully! We will get in touch with you soon.",
    goToPayment:
      "To complete your registration we will send you to the payment gateway",
    closeButton: "Close",
  },
  fr: {
    title: "Vous êtes à un pas de changer votre vie",
    subTitle:
      "Voyagez à travers le monde tout en remplissant votre portefeuille, visitez des endroits uniques. Embarquez et commencez une nouvelle vie !",
    formTitle: "Complétez le formulaire",
    formSubTitle: "Nous vous contacterons dans un délai d'un jour ouvrable.",
    placeholderName: "Prénom",
    placeholderLastName: "Nom de famille",
    placeholderEmail: "Email",
    placeholderPhone: "Numéro de téléphone",
    emailErrorText: "Veuillez entrer une adresse e-mail valide.",
    phoneErrorText:
      "Veuillez entrer un numéro de téléphone valide avec au moins 10 chiffres.",
    terms: "conditions",
    privacy: "politique de confidentialité",
    newsletter: "S'abonner à la newsletter",
    submitButton: "Je m'inscris",
    successTitle: "Succès !",
    successMessage:
      "Votre formulaire a été soumis avec succès ! Nous vous contacterons bientôt.",
    goToPayment:
      "Pour finaliser votre inscription, nous vous enverrons à la passerelle de paiement",
    closeButton: "Fermer",
  },
};

// Desestructura las traducciones para el idioma actual
const {
  title,
  subTitle,
  formTitle,
  formSubTitle,
  placeholderName,
  placeholderLastName,
  placeholderEmail,
  placeholderPhone,
  emailErrorText,
  phoneErrorText,
  terms,
  privacy,
  newsletter,
  submitButton,
  successTitle,
  successMessage,
  closeButton,
  goToPayment,
} = translations[lang];
---

<section class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
  <div class="mx-auto max-w-2xl lg:max-w-5xl">
    <div class="text-center">
      <h1
        class="text-balance text-2xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight"
      >
        {title}
      </h1>
      <p class="mt-1 text-pretty text-neutral-600 dark:text-neutral-400">
        {subTitle}
      </p>
    </div>

    <div class="flex flex-col rounded-xl p-4 sm:p-6 lg:p-8">
      <h2 class="mb-8 text-xl font-bold text-neutral-700 dark:text-neutral-300">
        {formTitle}
      </h2>
      <form method="POST" id="contact-form">
        <div class="grid gap-4">
          <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
            <input
              type="text"
              required
              name="firstname"
              id="firstname"
              class="block w-full rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 placeholder:text-neutral-500 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:placeholder:text-neutral-400 dark:focus:ring-1"
              placeholder={placeholderName}
            />
            <input
              type="text"
              required
              name="lastname"
              id="lastname"
              class="block w-full rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 placeholder:text-neutral-500 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:placeholder:text-neutral-400 dark:focus:ring-1"
              placeholder={placeholderLastName}
            />
          </div>
          <div>
            <input
              type="email"
              required
              name="email"
              id="email"
              class="block w-full rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 placeholder:text-neutral-500 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:placeholder:text-neutral-400 dark:focus:ring-1"
              placeholder={placeholderEmail}
              aria-describedby="email-error"
            />
            <span id="email-error" class="hidden text-sm text-red-600"
              >{emailErrorText}</span
            >
          </div>
          <div>
            <input
              type="tel"
              name="phone"
              required
              id="phone"
              minlength="10"
              pattern="[0-9]{10,}"
              class="block w-full rounded-lg border border-neutral-200 bg-neutral-50 px-4 py-3 text-sm text-neutral-700 placeholder:text-neutral-500 focus:border-neutral-200 focus:outline-none focus:ring focus:ring-neutral-400 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-600 dark:bg-neutral-700/30 dark:text-neutral-300 dark:placeholder:text-neutral-400 dark:focus:ring-1"
              placeholder={placeholderPhone}
              aria-describedby="phone-error"
            />
            <span id="phone-error" class="hidden text-sm text-red-600"
              >{phoneErrorText}</span
            >
          </div>

          <div class="grid space-y-3">
            <div class="relative flex items-start">
              <div class="mt-1 flex h-5 items-center">
                <input
                  id="checkbox-tyc"
                  name="checkbox-tyc"
                  type="checkbox"
                  onchange="cambiarCondiciones()"
                  class="text-blue-600 focus:ring-blue-500 dark:checked:bg-blue-500 dark:checked:border-blue-500 rounded border-gray-200 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-700 dark:bg-neutral-800 dark:focus:ring-offset-gray-800"
                  aria-describedby="checkbox-tyc-description"
                />
              </div>
              <label for="checkbox-tyc" class="ms-3">
                <span
                  class="block text-sm font-semibold text-gray-800 dark:text-neutral-300"
                >
                  Acepto los <a href="terms" target="_blank"> {terms} </a>
                  <a href="privacy" target="_blank"> y la {privacy}</a>
                </span>
              </label>
            </div>

            <div class="relative flex items-start">
              <div class="mt-1 flex h-5 items-center">
                <input
                  id="checkbox-ads"
                  name="checkbox-ads"
                  type="checkbox"
                  class="text-blue-600 focus:ring-blue-500 dark:checked:bg-blue-500 dark:checked:border-blue-500 rounded border-gray-200 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-700 dark:bg-neutral-800 dark:focus:ring-offset-gray-800"
                  aria-describedby="checkbox-ads-description"
                />
              </div>
              <label for="checkbox-ads" class="ms-3">
                <span
                  class="block text-sm font-semibold text-gray-800 dark:text-neutral-300"
                >
                  {newsletter}
                </span>
              </label>
            </div>
          </div>

          <div class="mt-4 grid">
            <AuthBtn title={submitButton} id="btn" name="btn" disabled />
          </div>
        </div>
      </form>

      <!-- Success Modal -->
      <div
        id="success-modal"
        class="fixed inset-0 z-50 hidden items-center justify-center bg-black bg-opacity-50"
        aria-labelledby="success-modal-label"
      >
        <div
          class="relative mx-auto mt-60 max-w-sm rounded-lg bg-white p-6 shadow-lg dark:bg-neutral-800"
        >
          <button
            id="close-modal"
            class="absolute right-2 top-2 text-gray-500 hover:text-gray-800 dark:text-gray-300 dark:hover:text-gray-100"
            aria-label="Cerrar modal"
          >
            <svg
              class="h-6 w-6"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
          <h3
            id="success-modal-label"
            class="flex flex-wrap justify-center text-center text-lg font-bold text-gray-900 dark:text-white"
          >
            {successTitle}
          </h3>
          <p class="mt-2 text-gray-700 dark:text-neutral-400">
            {successMessage}
          </p>
          <p
            class="text-yellow-600 mt-4 text-lg font-extrabold dark:text-yellow-400"
          >
            {goToPayment}
          </p>

          <button
            class="bg-blue-500 mt-4 rounded-lg px-4 py-2 text-white"
            data-hs-overlay="#success-modal">{closeButton}</button
          >
        </div>
      </div>

      <script>
        document.addEventListener("DOMContentLoaded", () => {
          const form = document.getElementById(
            "contact-form"
          ) as HTMLFormElement;
          const tyc = document.getElementById(
            "checkbox-tyc"
          ) as HTMLInputElement;
          const enviar = document.getElementById("btn") as HTMLButtonElement;
          const emailInput = document.getElementById(
            "email"
          ) as HTMLInputElement;
          const phoneInput = document.getElementById(
            "phone"
          ) as HTMLInputElement;
          const emailError = document.getElementById(
            "email-error"
          ) as HTMLSpanElement;
          const phoneError = document.getElementById(
            "phone-error"
          ) as HTMLSpanElement;
          const successModal = document.getElementById(
            "success-modal"
          ) as HTMLDivElement;
          const closeModalButton = document.getElementById(
            "close-modal"
          ) as HTMLButtonElement;

          function mostrarErrores() {
            if (emailInput.validity.typeMismatch) {
              emailError.textContent = "Format incorrect";
              emailError.classList.remove("hidden");
            } else {
              emailError.classList.add("hidden");
            }

            if (
              phoneInput.validity.patternMismatch ||
              phoneInput.validity.tooShort
            ) {
              phoneError.textContent = "Format incorrect";
              phoneError.classList.remove("hidden");
            } else {
              phoneError.classList.add("hidden");
            }
          }

          function cambiarCondiciones() {
            enviar.disabled = !tyc.checked;
          }

          form.addEventListener("submit", (event) => {
            event.preventDefault();

            if (
              !emailInput.validity.valid ||
              !phoneInput.validity.valid ||
              !tyc.checked
            ) {
              mostrarErrores();
              return;
            }

            // Aquí podrías manejar el envío del formulario, por ejemplo con AJAX
            setTimeout(() => {
              successModal.classList.remove("hidden");
              form.reset();
              enviar.disabled = true;
              setTimeout(function () {
                window.location.href = "https://app-eu1.hubspot.com/payments/HhzkzHZyP?referrer=PAYMENT_LINK";
              }, 3000);
            }, 500);
          });

          emailInput.addEventListener("input", mostrarErrores);
          phoneInput.addEventListener("input", mostrarErrores);
          tyc.addEventListener("change", cambiarCondiciones);

          closeModalButton.addEventListener("click", () => {
            successModal.classList.add("hidden");
          });

          cambiarCondiciones();
          mostrarErrores();
        });
      </script>
    </div>
  </div>
</section>
